{"ast":null,"code":"var _jsxFileName = \"/Users/nickshryock/Documents/WebDevProjects/memorizer/src/Components/Practice.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport PracticeCard from \"./PracticeCard\";\nimport ToggleBar from \"./ToggleBar\";\nimport './Practice.css';\nimport { getLegend } from \"../utils/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Practice() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [cardIndex, setCardIndex] = useState(0);\n  useEffect(() => {\n    setIsLoading(true);\n    getCards();\n    setC;\n    console.log(cards);\n  }, []);\n  useEffect(() => {\n    console.log(cards);\n    console.log(cardIndex);\n    console.log(cards[cardIndex]);\n  }, [cards]);\n  const getCards = async () => {\n    const setCardArry = data => {\n      const cardData = data;\n      setCards(cardData);\n    };\n    const cardArry = await getLegend();\n    setCardArry(cardArry);\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-input\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 24\n    }, this), cardIndex >= 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ToggleBar, {\n        queue: cards[cardIndex].queue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PracticeCard, {\n        queue: cards[cardIndex].queue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 14\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Practice, \"Vwh9g6dksEa/GxSiZfpscRJ9nuo=\");\n_c = Practice;\nexport default Practice;\nvar _c;\n$RefreshReg$(_c, \"Practice\");","map":{"version":3,"names":["React","useState","useEffect","PracticeCard","ToggleBar","getLegend","jsxDEV","_jsxDEV","Practice","_s","cards","setCards","isLoading","setIsLoading","cardIndex","setCardIndex","getCards","setC","console","log","setCardArry","data","cardData","cardArry","children","className","fileName","_jsxFileName","lineNumber","columnNumber","queue","_c","$RefreshReg$"],"sources":["/Users/nickshryock/Documents/WebDevProjects/memorizer/src/Components/Practice.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PracticeCard from \"./PracticeCard\";\nimport ToggleBar from \"./ToggleBar\";\nimport './Practice.css';\nimport { getLegend } from \"../utils/utils\";\n\nfunction Practice() {\n\n    const [cards, setCards] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [cardIndex, setCardIndex] = useState(0);\n\n    useEffect(() => {\n        setIsLoading(true)\n        getCards();\n        setC\n        console.log(cards)\n    },[])\n\n    useEffect(() => {\n        console.log(cards)\n        console.log(cardIndex)\n        console.log(cards[cardIndex])\n    }, [cards])\n\n    const getCards = async () => {\n\n        const setCardArry = (data) => {\n            const cardData = data;\n            setCards(cardData);\n        }\n\n        const cardArry = await getLegend();\n        setCardArry(cardArry);\n        setIsLoading(false);\n    }\n\n  return (\n    <div>\n        { isLoading && <p className='text-input'>Loading...</p> }\n        { cardIndex >= 0 ?\n            (<div>\n                <ToggleBar queue={cards[cardIndex].queue} />\n                <PracticeCard queue={cards[cardIndex].queue} />\n            </div>)\n             : null\n        }\n    </div>\n  );\n}\n\nexport default Practice;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAO,gBAAgB;AACvB,SAASC,SAAS,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAEhB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACZW,YAAY,CAAC,IAAI,CAAC;IAClBG,QAAQ,CAAC,CAAC;IACVC,IAAI;IACJC,OAAO,CAACC,GAAG,CAACT,KAAK,CAAC;EACtB,CAAC,EAAC,EAAE,CAAC;EAELR,SAAS,CAAC,MAAM;IACZgB,OAAO,CAACC,GAAG,CAACT,KAAK,CAAC;IAClBQ,OAAO,CAACC,GAAG,CAACL,SAAS,CAAC;IACtBI,OAAO,CAACC,GAAG,CAACT,KAAK,CAACI,SAAS,CAAC,CAAC;EACjC,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAEX,MAAMM,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAEzB,MAAMI,WAAW,GAAIC,IAAI,IAAK;MAC1B,MAAMC,QAAQ,GAAGD,IAAI;MACrBV,QAAQ,CAACW,QAAQ,CAAC;IACtB,CAAC;IAED,MAAMC,QAAQ,GAAG,MAAMlB,SAAS,CAAC,CAAC;IAClCe,WAAW,CAACG,QAAQ,CAAC;IACrBV,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC;EAEH,oBACEN,OAAA;IAAAiB,QAAA,GACMZ,SAAS,iBAAIL,OAAA;MAAGkB,SAAS,EAAC,YAAY;MAAAD,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACrDf,SAAS,IAAI,CAAC,gBACXP,OAAA;MAAAiB,QAAA,gBACGjB,OAAA,CAACH,SAAS;QAAC0B,KAAK,EAAEpB,KAAK,CAACI,SAAS,CAAC,CAACgB;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5CtB,OAAA,CAACJ,YAAY;QAAC2B,KAAK,EAAEpB,KAAK,CAACI,SAAS,CAAC,CAACgB;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,GACH,IAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEV,CAAC;AAEV;AAACpB,EAAA,CA3CQD,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AA6CjB,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}