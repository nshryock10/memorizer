{"ast":null,"code":"var _jsxFileName = \"/Users/nickshryock/Documents/WebDevProjects/memorizer/src/Components/Practice.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\nimport './Practice.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Practice() {\n  _s();\n  const [phase, setPhase] = useState('before'); //options are before, during, after\n  const [inputType, setInputType] = useState(null); //options are mic or keyboard\n  const [speechSupported, setSpeechSupported] = useState(true);\n  const [isListening, setIsListening] = useState(false);\n  const microphoneRef = useRef(null);\n  const {\n    transcript,\n    resetTranscript\n  } = useSpeechRecognition();\n  const [textInput, setTextInput] = useState('');\n  if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n    setSpeechSupported(false);\n  }\n  const handleListening = () => {\n    setIsListening(true);\n    //microphoneRef.current.classList.add(\"listening\");\n    SpeechRecognition.startListening({\n      continuous: true\n    });\n  };\n  const stopHandle = () => {\n    setIsListening(false);\n    //microphoneRef.current.classList.remove('listening');\n    SpeechRecognition.stopListening();\n  };\n  const handleReset = () => {\n    stopHandle();\n    resetTranscript();\n  };\n  useEffect(() => {\n    console.log(textInput);\n  }, [textInput]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"practice-container\",\n    children: [!transcript && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-container\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"text-input\",\n          type: \"text\",\n          placeholder: \"Type or click the mic to dictate\",\n          onChange: target => setTextInput(target.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), transcript && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-input\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: transcript\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), phase === 'before' && speechSupported && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"circle-button mic-btn\",\n        ref: microphoneRef,\n        onClick: () => {\n          setPhase('during');\n          set;\n          handleListening();\n        },\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"16\",\n          height: \"16\",\n          fill: \"currentColor\",\n          className: \"mic-btn-img bi bi-mic-fill\",\n          viewBox: \"0 0 16 16\",\n          children: [/*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M5 3a3 3 0 0 1 6 0v5a3 3 0 0 1-6 0V3z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M3.5 6.5A.5.5 0 0 1 4 7v1a4 4 0 0 0 8 0V7a.5.5 0 0 1 1 0v1a5 5 0 0 1-4.5 4.975V15h3a.5.5 0 0 1 0 1h-7a.5.5 0 0 1 0-1h3v-2.025A5 5 0 0 1 3 8V7a.5.5 0 0 1 .5-.5z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), phase === 'during' && inputType === 'mic' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mute circle-button mic-btn\",\n        onClick: () => {\n          setPhase('after');\n          stopHandle();\n        },\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"16\",\n          height: \"16\",\n          fill: \"currentColor\",\n          className: \"mic-btn-img bi bi-mic-mute-fill\",\n          viewBox: \"0 0 16 16\",\n          children: [/*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M13 8c0 .564-.094 1.107-.266 1.613l-.814-.814A4.02 4.02 0 0 0 12 8V7a.5.5 0 0 1 1 0v1zm-5 4c.818 0 1.578-.245 2.212-.667l.718.719a4.973 4.973 0 0 1-2.43.923V15h3a.5.5 0 0 1 0 1h-7a.5.5 0 0 1 0-1h3v-2.025A5 5 0 0 1 3 8V7a.5.5 0 0 1 1 0v1a4 4 0 0 0 4 4zm3-9v4.879L5.158 2.037A3.001 3.001 0 0 1 11 3z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M9.486 10.607 5 6.12V8a3 3 0 0 0 4.486 2.607zm-7.84-9.253 12 12 .708-.708-12-12-.708.708z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), phase === 'after' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vrt-btn-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"primary-button\",\n        onClick: () => {\n          setPhase('after');\n        },\n        children: \"Finish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"primary-button\",\n        onClick: () => {\n          setPhase('before');\n          handleReset();\n        },\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"primary-button\",\n        onClick: () => {\n          setPhase('before');\n          handleReset();\n        },\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Practice, \"KrgLICC7VX45136uuEL9KcMr26Y=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = Practice;\nexport default Practice;\nvar _c;\n$RefreshReg$(_c, \"Practice\");","map":{"version":3,"names":["React","useState","useRef","useEffect","SpeechRecognition","useSpeechRecognition","jsxDEV","_jsxDEV","Practice","_s","phase","setPhase","inputType","setInputType","speechSupported","setSpeechSupported","isListening","setIsListening","microphoneRef","transcript","resetTranscript","textInput","setTextInput","browserSupportsSpeechRecognition","handleListening","startListening","continuous","stopHandle","stopListening","handleReset","console","log","className","children","type","placeholder","onChange","target","value","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","set","xmlns","width","height","fill","viewBox","d","_c","$RefreshReg$"],"sources":["/Users/nickshryock/Documents/WebDevProjects/memorizer/src/Components/Practice.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\nimport './Practice.css';\n\nfunction Practice() {\n\n    const [phase, setPhase] = useState('before') //options are before, during, after\n    const [inputType, setInputType] = useState(null); //options are mic or keyboard\n    const [speechSupported, setSpeechSupported] = useState(true);\n    const [isListening, setIsListening] = useState(false);\n    const microphoneRef = useRef(null);\n    const { transcript, resetTranscript } = useSpeechRecognition();\n    const [textInput, setTextInput] = useState('');\n\n    if(!SpeechRecognition.browserSupportsSpeechRecognition()){\n        setSpeechSupported(false)\n    }\n    \n    const handleListening = () => {\n        setIsListening(true);\n        //microphoneRef.current.classList.add(\"listening\");\n        SpeechRecognition.startListening({\n            continuous: true,\n        })\n    };\n\n    const stopHandle = () => {\n        setIsListening(false);\n        //microphoneRef.current.classList.remove('listening');\n        SpeechRecognition.stopListening();\n    }\n\n    const handleReset = () => {\n        stopHandle();\n        resetTranscript()\n    }\n\n    useEffect(() => {\n        console.log(textInput)\n    }, [textInput])\n\n  return (\n    <div className=\"practice-container\">\n       {!transcript &&\n        <div className=\"input-container\">\n            <div className=\"text-container\">\n                <textarea \n                    className=\"text-input\" \n                    type='text' \n                    placeholder=\"Type or click the mic to dictate\"\n                    onChange={target => setTextInput(target.target.value)}\n                >\n                </textarea>\n            </div>\n        </div>}\n        {\n            transcript &&\n            <div className=\"input-container\">\n                <div className=\"text-input\"> \n                    <p>{transcript}</p> \n                </div>\n            </div>\n        }\n        {\n            phase === 'before' &&\n            speechSupported &&\n        \n            <div className=\"btn-container\">\n                <button \n                    className=\"circle-button mic-btn\"\n                    ref={microphoneRef}\n                    onClick={() => {\n                        setPhase('during');\n                        set\n                        handleListening()\n                    }}\n                >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"mic-btn-img bi bi-mic-fill\" viewBox=\"0 0 16 16\">\n                        <path d=\"M5 3a3 3 0 0 1 6 0v5a3 3 0 0 1-6 0V3z\"/>\n                        <path d=\"M3.5 6.5A.5.5 0 0 1 4 7v1a4 4 0 0 0 8 0V7a.5.5 0 0 1 1 0v1a5 5 0 0 1-4.5 4.975V15h3a.5.5 0 0 1 0 1h-7a.5.5 0 0 1 0-1h3v-2.025A5 5 0 0 1 3 8V7a.5.5 0 0 1 .5-.5z\"/>\n                    </svg>\n                </button>\n            </div>\n        }\n        {\n            phase === 'during' &&\n            inputType === 'mic' &&\n        \n            <div className=\"btn-container\">\n                <button \n                    className=\"mute circle-button mic-btn\"\n                    onClick={() => {\n                        setPhase('after')\n                        stopHandle()\n                    }}\n                >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"mic-btn-img bi bi-mic-mute-fill\" viewBox=\"0 0 16 16\">\n                        <path d=\"M13 8c0 .564-.094 1.107-.266 1.613l-.814-.814A4.02 4.02 0 0 0 12 8V7a.5.5 0 0 1 1 0v1zm-5 4c.818 0 1.578-.245 2.212-.667l.718.719a4.973 4.973 0 0 1-2.43.923V15h3a.5.5 0 0 1 0 1h-7a.5.5 0 0 1 0-1h3v-2.025A5 5 0 0 1 3 8V7a.5.5 0 0 1 1 0v1a4 4 0 0 0 4 4zm3-9v4.879L5.158 2.037A3.001 3.001 0 0 1 11 3z\"/>\n                        <path d=\"M9.486 10.607 5 6.12V8a3 3 0 0 0 4.486 2.607zm-7.84-9.253 12 12 .708-.708-12-12-.708.708z\"/>\n                    </svg>\n                </button>\n            </div>\n        }\n        {\n            phase === 'after' &&\n        \n            <div className=\"vrt-btn-container\">\n                <button \n                    className=\"primary-button\"\n                    onClick={() => {\n                        setPhase('after')\n                    }}\n                >\n                    Finish\n                </button>\n                <button \n                    className=\"primary-button\"\n                    onClick={() => {\n                        setPhase('before')\n                        handleReset()\n                    }}\n                >\n                    Edit\n                </button>\n                <button \n                    className=\"primary-button\"\n                    onClick={() => {\n                        setPhase('before')\n                        handleReset()\n                    }}\n                >\n                    Restart\n                </button>\n            </div>\n        }\n    </div>\n  );\n}\n\nexport default Practice;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}