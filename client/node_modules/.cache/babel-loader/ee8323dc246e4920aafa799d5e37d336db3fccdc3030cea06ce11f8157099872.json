{"ast":null,"code":"var _jsxFileName = \"/Users/nickshryock/Documents/WebDevProjects/memorizer/client/src/Components/Library.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport DropDown from \"./DropDown\";\nimport { getCategories, getLegends } from \"../utils/api\";\nimport Legend from \"./Legend\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Library() {\n  _s();\n  const [categories, setCategories] = useState();\n  const [category, setCategory] = useState('Select from drop down');\n  const [catId, setCatId] = useState();\n  const [isLoading, setIsLoading] = useState();\n  const [legends, setLegends] = useState();\n  const [legend, setLegend] = useState();\n  const [queue, setQueue] = useState();\n  const [open, setOpen] = useState();\n  const setCategoryOptions = async () => {\n    const setData = catData => {\n      setCategories(catData);\n    };\n    const data = await getCategories();\n    setData(data);\n    setIsLoading(false);\n  };\n  const getLegendCards = async () => {\n    const setCardArry = data => {\n      const cardData = data;\n      setLegends(cardData);\n    };\n    const cardArry = await getLegends(catId); //getQueues()\n    setCardArry(cardArry);\n    setIsLoading(false);\n  };\n  useEffect(() => {\n    setIsLoading(true);\n    setCategoryOptions();\n  }, []);\n  useEffect(() => {\n    if (catId) {\n      setLegend(lerg);\n    }\n  }, catId);\n  useEffect(() => {\n    if (categories) {\n      for (let i = 0; i < categories.length; i++) {\n        if (categories[i].category === category) {\n          setCatId(categories[i].id);\n        }\n      }\n    }\n  }, [category]);\n  useEffect(() => {\n    if (catId) {\n      getLegendCards();\n    }\n  }, [catId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DropDown, {\n      options: categories,\n      choice: category,\n      setChoice: setCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), legends && !open && legends.map((legend, index) => {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"primary-button\",\n        onClick: () => setOpen(!open),\n        children: legend.queue\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }, this);\n    }), open && /*#__PURE__*/_jsxDEV(Legend, {\n      open: open,\n      setOpen: setOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n_s(Library, \"2Xp01xE8iEOhb8v/eF/BVa8Bc3s=\");\n_c = Library;\nexport default Library;\nvar _c;\n$RefreshReg$(_c, \"Library\");","map":{"version":3,"names":["React","useState","useEffect","DropDown","getCategories","getLegends","Legend","jsxDEV","_jsxDEV","Library","_s","categories","setCategories","category","setCategory","catId","setCatId","isLoading","setIsLoading","legends","setLegends","legend","setLegend","queue","setQueue","open","setOpen","setCategoryOptions","setData","catData","data","getLegendCards","setCardArry","cardData","cardArry","lerg","i","length","id","children","options","choice","setChoice","fileName","_jsxFileName","lineNumber","columnNumber","map","index","className","onClick","_c","$RefreshReg$"],"sources":["/Users/nickshryock/Documents/WebDevProjects/memorizer/client/src/Components/Library.js"],"sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport DropDown from \"./DropDown\";\nimport { getCategories, getLegends } from \"../utils/api\";\nimport Legend from \"./Legend\";\n\nfunction Library () {\n\n    const [categories, setCategories] = useState();\n    const [category, setCategory] = useState('Select from drop down');\n    const [catId, setCatId] = useState();\n    const [isLoading, setIsLoading] = useState();\n    const [legends, setLegends] = useState();\n    const [legend, setLegend] = useState();\n    const [queue, setQueue] = useState();\n    const [open, setOpen] = useState();\n\n    \n\n    const setCategoryOptions = async () => {\n\n        const setData = (catData) => {\n            setCategories(catData);\n        }\n        const data = await getCategories();\n        setData(data);\n        setIsLoading(false)\n\n    }\n\n    const getLegendCards = async () => {\n\n        const setCardArry = (data) => {\n            const cardData = data;\n            setLegends(cardData);\n        }\n\n        const cardArry = await getLegends(catId); //getQueues()\n        setCardArry(cardArry);\n        setIsLoading(false);\n    }\n \n    useEffect(() => {\n        setIsLoading(true)\n        setCategoryOptions()\n    }, [])\n\n    useEffect(() => {\n        if(catId){\n            setLegend(lerg)\n        }\n    }, catId)\n\n    useEffect(() => {   \n        if(categories){\n            for(let i=0; i < categories.length; i++){\n                if(categories[i].category === category){\n                    setCatId(categories[i].id)\n                }\n            }\n        }\n    }, [category])\n\n    useEffect(() => {\n        if(catId){\n            getLegendCards();\n        }\n    },[catId])\n\n    return (\n        <div>\n            <DropDown \n                options={categories}\n                choice={category}\n                setChoice={setCategory}\n            />\n            {\n                legends &&\n                !open &&\n                legends.map((legend, index) => {\n                    return(\n                        <button key={index} className=\"primary-button\"\n                            onClick={() => setOpen(!open)}\n                        >\n                            {legend.queue}\n                        </button>\n                    )\n                })\n            }\n            {\n                open &&\n                <Legend \n                    open={open}\n                    setOpen={setOpen}\n                />\n            }\n        </div>\n    )\n}\n\nexport default Library;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}