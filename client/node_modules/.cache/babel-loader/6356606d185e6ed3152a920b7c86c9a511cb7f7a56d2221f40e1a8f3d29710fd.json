{"ast":null,"code":"var _jsxFileName = \"/Users/nickshryock/Documents/WebDevProjects/memorizer/client/src/Components/LegendInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './LegendInput.css';\nimport DropDown from \"./DropDown\";\nimport { getCategories } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LegendInput() {\n  _s();\n  const [queue, setQueue] = useState();\n  const [category, setCategory] = useState('Select from drop down');\n  const [categories, setCategories] = useState();\n  const [catId, setCatId] = useState();\n  const [isLoading, setIsLoading] = useState();\n  useEffect(() => {\n    setIsLoading(true);\n    setCategoryOptions();\n  }, []);\n  useEffect(() => {\n    if (categories) {\n      console.log(catId);\n      for (let i = 0; i < categories.length; i++) {\n        if (categories[i].category === category) {\n          setCatId(categories[i].id);\n        }\n      }\n    }\n  }, [category]);\n  useEffect(() => {\n    console.log(catId);\n  });\n  const setCategoryOptions = async () => {\n    const setData = catData => {\n      setCategories(catData);\n    };\n    const data = await getCategories();\n    setData(data);\n    setIsLoading(false);\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"def-text\",\n          children: \"Library\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n          options: categories,\n          setOptions: setCategories,\n          choice: category,\n          setChoice: setCategory,\n          id: catId,\n          setCatId: setCatId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"def-text\",\n          children: \"Queue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"queue\",\n          type: \"text\",\n          required: true,\n          onChange: e => setQueue(e.currentTarget.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(LegendInput, \"4Z9l4LOYz6RC0t0/M99RiiVhFq0=\");\n_c = LegendInput;\nexport default LegendInput;\nvar _c;\n$RefreshReg$(_c, \"LegendInput\");","map":{"version":3,"names":["React","useState","useEffect","DropDown","getCategories","jsxDEV","_jsxDEV","LegendInput","_s","queue","setQueue","category","setCategory","categories","setCategories","catId","setCatId","isLoading","setIsLoading","setCategoryOptions","console","log","i","length","id","setData","catData","data","children","fileName","_jsxFileName","lineNumber","columnNumber","className","options","setOptions","choice","setChoice","type","required","onChange","e","currentTarget","value","_c","$RefreshReg$"],"sources":["/Users/nickshryock/Documents/WebDevProjects/memorizer/client/src/Components/LegendInput.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './LegendInput.css';\nimport DropDown from \"./DropDown\";\nimport { getCategories } from \"../utils/api\";\n\nfunction LegendInput () {\n\n    const [queue, setQueue] = useState();\n    const [category, setCategory] = useState('Select from drop down');\n    const [categories, setCategories] = useState();\n    const [catId, setCatId] = useState();\n    const [isLoading, setIsLoading] = useState()\n\n    useEffect(() => {\n        setIsLoading(true)\n        setCategoryOptions()\n    }, [])\n\n    useEffect(() => {\n        \n        if(categories){\n            console.log(catId)\n            for(let i=0; i < categories.length; i++){\n                if(categories[i].category === category){\n                    setCatId(categories[i].id)\n                }\n        }}\n    }, [category])\n\n    useEffect(() => {\n        console.log(catId)\n    })\n\n    const setCategoryOptions = async () => {\n\n        const setData = (catData) => {\n            setCategories(catData);\n        }\n        const data = await getCategories();\n        setData(data);\n        setIsLoading(false)\n\n    }\n    if(isLoading){\n        return(\n            <div>\n                <p>Loading...</p>\n            </div>\n        )\n    }else{\n        return(\n            <div className=\"form-container\">\n                <form>\n                    <label className=\"def-text\">Library</label>\n                    <br/>\n                    <DropDown \n                        options={categories}\n                        setOptions={setCategories}\n                        choice={category}\n                        setChoice={setCategory}\n                        id={catId}\n                        setCatId={setCatId}\n                    />\n                    <br/>\n                    <label className=\"def-text\">Queue</label>\n                    <br/>\n                    <input\n                        id='queue'\n                        type='text'\n                        required\n                        onChange={(e) => setQueue(e.currentTarget.value)}\n                    />\n                </form>\n            </div>\n        )\n    }\n\n}\n\nexport default LegendInput;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}