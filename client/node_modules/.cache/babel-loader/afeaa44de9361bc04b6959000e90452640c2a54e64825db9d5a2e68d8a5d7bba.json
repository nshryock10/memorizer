{"ast":null,"code":"const convertToArry = text => {\n  //loop through text and push an object with each single word and correcy key (t/f)\n  //remove all punctuation\n  const noPunc = text.replace(/[.,\\/#!$%\\^&\\*;{}=\\-_`~()]/g, \"\");\n  //console.log(noPunc)\n  const removeSpace = noPunc.replace(/\\s{2,}/g, \" \");\n  //console.log(removeSpace)\n  const allLower = removeSpace.toLowerCase();\n  //console.log(allLower)\n\n  let finalArry = []; //array to put string in an object for each word\n\n  const stringSplit = allLower.split(\" \"); //split sentence into words separated by spaces\n  for (let i = 0; i < stringSplit.length; i++) {\n    finalArry.push({\n      word: stringSplit[i],\n      correct: null\n    });\n  }\n  return finalArry;\n};\nexport const scoreAnswer = (answer, legend) => {\n  const answerArry = convertToArry(answer);\n  const legendArry = convertToArry(legend);\n  for (let i = 0; i < legendArry.length; i++) {\n    const key = legendArry[i];\n    const word = answerArry[i];\n\n    //check if first words match\n    if (legendArry[i] === answerArry[i]) {\n      //if they match count answer correct\n      legendArry[i].correct = true;\n      answerArry[i].correct = true;\n      console.log(legendArry);\n      console.log(answerArry);\n    } else if (legendArry[i + 1] === answerArry[i]) {//check if word mathes next legend word\n      //count \n    }\n\n    //check if word matches next 2 legend words\n\n    //check if word matches previous legend word\n  }\n};\n\nexport const getLegend = () => {\n  return 'I have been crucified with Christ. It is no longer I who live, but Christ who lives in me. And the life I now live in the flesh I live by faith in the Son of God, who loved me and gave himself for me. Galatians 2:20';\n};\nexport const getAnswer = () => {\n  return 'i have been crucified in christ. it is no longer i who live but christ who lives in me. and this life I now live in the flesh i live by faith in the son of god who loved me and gave himself for me. galatians 2:20';\n};","map":{"version":3,"names":["convertToArry","text","noPunc","replace","removeSpace","allLower","toLowerCase","finalArry","stringSplit","split","i","length","push","word","correct","scoreAnswer","answer","legend","answerArry","legendArry","key","console","log","getLegend","getAnswer"],"sources":["/Users/nickshryock/Documents/WebDevProjects/memorizer/src/utils/utils.js"],"sourcesContent":["const convertToArry = (text) => {\n\n    //loop through text and push an object with each single word and correcy key (t/f)\n        //remove all punctuation\n        const noPunc = text.replace(/[.,\\/#!$%\\^&\\*;{}=\\-_`~()]/g,\"\");\n        //console.log(noPunc)\n        const removeSpace = noPunc.replace(/\\s{2,}/g,\" \");\n        //console.log(removeSpace)\n        const allLower = removeSpace.toLowerCase();\n        //console.log(allLower)\n\n        let finalArry = []; //array to put string in an object for each word\n\n        const stringSplit = allLower.split(\" \"); //split sentence into words separated by spaces\n        for(let i=0; i < stringSplit.length; i++){\n            finalArry.push({\n                word: stringSplit[i],\n                correct: null,\n            })\n        }\n        return finalArry;\n}\n\nexport const scoreAnswer = ( answer, legend ) => {\n    const answerArry = convertToArry(answer);\n    const legendArry = convertToArry(legend);\n\n    for(let i=0; i < legendArry.length; i++){\n\n        const key = legendArry[i];\n        const word = answerArry[i];\n\n        //check if first words match\n        if(legendArry[i] === answerArry[i]){\n            //if they match count answer correct\n            legendArry[i].correct = true;\n            answerArry[i].correct = true;\n\n            console.log(legendArry)\n            console.log(answerArry);\n        }else if(legendArry[i + 1] === answerArry[i]){ //check if word mathes next legend word\n            //count \n        }\n\n        //check if word matches next 2 legend words\n\n        //check if word matches previous legend word\n\n    }\n\n}\n\nexport const getLegend = () => {\n return 'I have been crucified with Christ. It is no longer I who live, but Christ who lives in me. And the life I now live in the flesh I live by faith in the Son of God, who loved me and gave himself for me. Galatians 2:20'\n}\n\nexport const getAnswer = () => {\n    return 'i have been crucified in christ. it is no longer i who live but christ who lives in me. and this life I now live in the flesh i live by faith in the son of god who loved me and gave himself for me. galatians 2:20'\n}"],"mappings":"AAAA,MAAMA,aAAa,GAAIC,IAAI,IAAK;EAE5B;EACI;EACA,MAAMC,MAAM,GAAGD,IAAI,CAACE,OAAO,CAAC,6BAA6B,EAAC,EAAE,CAAC;EAC7D;EACA,MAAMC,WAAW,GAAGF,MAAM,CAACC,OAAO,CAAC,SAAS,EAAC,GAAG,CAAC;EACjD;EACA,MAAME,QAAQ,GAAGD,WAAW,CAACE,WAAW,CAAC,CAAC;EAC1C;;EAEA,IAAIC,SAAS,GAAG,EAAE,CAAC,CAAC;;EAEpB,MAAMC,WAAW,GAAGH,QAAQ,CAACI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;EACzC,KAAI,IAAIC,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAGF,WAAW,CAACG,MAAM,EAAED,CAAC,EAAE,EAAC;IACrCH,SAAS,CAACK,IAAI,CAAC;MACXC,IAAI,EAAEL,WAAW,CAACE,CAAC,CAAC;MACpBI,OAAO,EAAE;IACb,CAAC,CAAC;EACN;EACA,OAAOP,SAAS;AACxB,CAAC;AAED,OAAO,MAAMQ,WAAW,GAAGA,CAAEC,MAAM,EAAEC,MAAM,KAAM;EAC7C,MAAMC,UAAU,GAAGlB,aAAa,CAACgB,MAAM,CAAC;EACxC,MAAMG,UAAU,GAAGnB,aAAa,CAACiB,MAAM,CAAC;EAExC,KAAI,IAAIP,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAGS,UAAU,CAACR,MAAM,EAAED,CAAC,EAAE,EAAC;IAEpC,MAAMU,GAAG,GAAGD,UAAU,CAACT,CAAC,CAAC;IACzB,MAAMG,IAAI,GAAGK,UAAU,CAACR,CAAC,CAAC;;IAE1B;IACA,IAAGS,UAAU,CAACT,CAAC,CAAC,KAAKQ,UAAU,CAACR,CAAC,CAAC,EAAC;MAC/B;MACAS,UAAU,CAACT,CAAC,CAAC,CAACI,OAAO,GAAG,IAAI;MAC5BI,UAAU,CAACR,CAAC,CAAC,CAACI,OAAO,GAAG,IAAI;MAE5BO,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;MACvBE,OAAO,CAACC,GAAG,CAACJ,UAAU,CAAC;IAC3B,CAAC,MAAK,IAAGC,UAAU,CAACT,CAAC,GAAG,CAAC,CAAC,KAAKQ,UAAU,CAACR,CAAC,CAAC,EAAC,CAAE;MAC3C;IAAA;;IAGJ;;IAEA;EAEJ;AAEJ,CAAC;;AAED,OAAO,MAAMa,SAAS,GAAGA,CAAA,KAAM;EAC9B,OAAO,yNAAyN;AACjO,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAC3B,OAAO,sNAAsN;AACjO,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}