{"ast":null,"code":"var _jsxFileName = \"/Users/nickshryock/Documents/WebDevProjects/memorizer/client/src/Components/PracticeCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { MicFill, MicMuteFill, ArrowRepeat, PencilFill, BoxArrowRight } from 'react-bootstrap-icons';\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\nimport './PracticeCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PracticeCard(props) {\n  _s();\n  const [phase, setPhase] = useState('before'); //options are before, during, after\n  const [inputType, setInputType] = useState(null); //options are mic or keyboard\n  const [speechSupported, setSpeechSupported] = useState(true);\n  const [textInput, setTextInput] = useState('');\n  const [editVoice, setEditVoice] = useState(false);\n  //const [answer, setAnswer] = useState('');\n  const microphoneRef = useRef(null);\n  const {\n    transcript,\n    resetTranscript\n  } = useSpeechRecognition();\n  const transcriptRef = useRef(transcript);\n  const handlePhaseChange = props.handlePhaseChange;\n  const setAnswer = props.setAnswer;\n  if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n    setSpeechSupported(false);\n  }\n  const handleListening = () => {\n    SpeechRecognition.startListening({\n      continuous: true\n    });\n  };\n  const stopHandle = () => {\n    SpeechRecognition.stopListening();\n  };\n  const handleReset = () => {\n    stopHandle();\n    resetTranscript();\n    setTextInput('');\n  };\n  const handleTextChange = () => {};\n  const handleFinish = () => {\n    //trigger PUT request\n    console.log();\n  };\n  useEffect(() => {\n    if (textInput) {\n      setPhase('after');\n      setAnswer(textInput);\n    } else {\n      setPhase('before');\n      setAnswer(textInput);\n    }\n  }, [textInput]);\n\n  //Review this block for use for editing voice dictation -------------- //\n  useEffect(() => {\n    transcriptRef.current = transcript;\n    setAnswer(transcript);\n  }, [transcript]);\n\n  // -------------------------------------------------------------------- //\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"practice-container\",\n    children: [!transcript && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"text-input\",\n          type: \"text\",\n          placeholder: `Type or click the mic to dictate`,\n          onChange: target => setTextInput(target.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), transcript && !editVoice && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-input\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: transcript\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), transcript && editVoice && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-input\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: transcriptRef,\n          onChange: handleTextChange,\n          className: \"text-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), phase === 'before' && speechSupported && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"circle-button mic-btn\",\n        ref: microphoneRef,\n        onClick: () => {\n          setPhase('during');\n          setInputType('mic');\n          handleListening();\n        },\n        children: /*#__PURE__*/_jsxDEV(MicFill, {\n          className: \"mic-btn-img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), phase === 'during' && inputType === 'mic' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mute circle-button mic-btn\",\n        onClick: () => {\n          if (transcript) {\n            setPhase('after');\n            stopHandle();\n          } else {\n            setPhase('before');\n            stopHandle();\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(MicMuteFill, {\n          className: \"mic-btn-img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), phase === 'after' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hrz-btn-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sm-cir-button tertiary-btn\",\n        onClick: () => {\n          setPhase('before');\n          handleReset();\n        },\n        children: /*#__PURE__*/_jsxDEV(ArrowRepeat, {\n          className: \"restart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sm-cir-button tertiary-btn\",\n        onClick: () => {\n          setEditVoice(true);\n        },\n        children: /*#__PURE__*/_jsxDEV(PencilFill, {\n          className: \"edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sm-cir-button tertiary-btn\",\n        onClick: () => {\n          handlePhaseChange('review');\n          handleFinish();\n        },\n        children: /*#__PURE__*/_jsxDEV(BoxArrowRight, {\n          className: \"finish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n_s(PracticeCard, \"MzYq3lGuTnhkVPFs+Cs1m8IomvI=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = PracticeCard;\nexport default PracticeCard;\nvar _c;\n$RefreshReg$(_c, \"PracticeCard\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Link","MicFill","MicMuteFill","ArrowRepeat","PencilFill","BoxArrowRight","SpeechRecognition","useSpeechRecognition","jsxDEV","_jsxDEV","PracticeCard","props","_s","phase","setPhase","inputType","setInputType","speechSupported","setSpeechSupported","textInput","setTextInput","editVoice","setEditVoice","microphoneRef","transcript","resetTranscript","transcriptRef","handlePhaseChange","setAnswer","browserSupportsSpeechRecognition","handleListening","startListening","continuous","stopHandle","stopListening","handleReset","handleTextChange","handleFinish","console","log","current","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","target","value","ref","onClick","_c","$RefreshReg$"],"sources":["/Users/nickshryock/Documents/WebDevProjects/memorizer/client/src/Components/PracticeCard.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n    MicFill, \n    MicMuteFill,\n    ArrowRepeat,\n    PencilFill,\n    BoxArrowRight} from 'react-bootstrap-icons';\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\nimport './PracticeCard.css';\n\nfunction PracticeCard(props) {\n\n    const [phase, setPhase] = useState('before') //options are before, during, after\n    const [inputType, setInputType] = useState(null); //options are mic or keyboard\n    const [speechSupported, setSpeechSupported] = useState(true);\n    const [textInput, setTextInput] = useState('');\n    const [editVoice, setEditVoice] = useState(false);\n    //const [answer, setAnswer] = useState('');\n    const microphoneRef = useRef(null);\n    const { transcript, resetTranscript } = useSpeechRecognition();\n\n    const transcriptRef = useRef(transcript);\n\n    const handlePhaseChange = props.handlePhaseChange;\n    const setAnswer = props.setAnswer;\n    \n    if(!SpeechRecognition.browserSupportsSpeechRecognition()){\n        setSpeechSupported(false)\n    }\n    \n    const handleListening = () => {\n        SpeechRecognition.startListening({\n            continuous: true,\n        })\n    };\n\n    const stopHandle = () => {\n        SpeechRecognition.stopListening();\n    }\n\n    const handleReset = () => {\n        stopHandle();\n        resetTranscript();\n        setTextInput('')\n    }\n\n    const handleTextChange = () => {\n\n    }\n\n    const handleFinish = () => {\n        //trigger PUT request\n        console.log()\n    }\n\n    useEffect(() => {\n        if(textInput){\n            setPhase('after')\n            setAnswer(textInput)\n        }else{\n            setPhase('before')\n            setAnswer(textInput)\n        }\n        \n    }, [textInput])\n\n    //Review this block for use for editing voice dictation -------------- //\n    useEffect(() => {\n            transcriptRef.current = transcript\n            setAnswer(transcript)\n        \n    }, [transcript])\n\n    // -------------------------------------------------------------------- //\n\n  return (\n        <div className=\"practice-container\">\n       {!transcript &&\n        <div className=\"input-container\">\n            <div className=\"text-container\">\n                <br/>\n                <textarea \n                    className=\"text-input\" \n                    type='text' \n                    placeholder={`Type or click the mic to dictate`}\n                    onChange={target => setTextInput(target.target.value)}\n                >\n                </textarea>\n            </div>\n        </div>}\n        {\n            transcript &&\n            !editVoice &&\n            <div className=\"input-container\">\n                <div className=\"text-input\"> \n                    <p>{transcript}</p> \n                </div>\n            </div>\n        }\n        {\n            transcript &&\n            editVoice &&\n            <div className=\"input-container\">\n                <div className=\"text-input\"> \n                    <textarea \n                        ref={transcriptRef}\n                        onChange={handleTextChange}\n                        className=\"text-input\" \n                    ></textarea> \n                </div>\n            </div>\n        }\n        {\n            phase === 'before' &&\n            speechSupported &&\n        \n            <div className=\"btn-container\">\n                <button \n                    className=\"circle-button mic-btn\"\n                    ref={microphoneRef}\n                    onClick={() => {\n                        setPhase('during');\n                        setInputType('mic')\n                        handleListening()\n                    }}\n                >\n                    <MicFill className='mic-btn-img' />\n                </button>\n            </div>\n        }\n        {\n            phase === 'during' &&\n            inputType === 'mic' &&\n        \n            <div className=\"btn-container\">\n                <button \n                    className=\"mute circle-button mic-btn\"\n                    onClick={() => {\n                        if(transcript){\n                            setPhase('after')\n                            stopHandle()\n                        }else{\n                            setPhase('before')\n                            stopHandle()\n                        }\n                    }}\n                >\n                    <MicMuteFill className=\"mic-btn-img\" />\n                </button>\n            </div>\n        }\n        {\n            phase === 'after' &&\n        \n            <div className=\"hrz-btn-container\">\n                <button \n                    className=\"sm-cir-button tertiary-btn\"\n                    onClick={() => {\n                        setPhase('before')\n                        handleReset()\n                    }}\n                >\n                    <ArrowRepeat className=\"restart\" />\n                </button>\n                <button \n                    className=\"sm-cir-button tertiary-btn\"\n                    onClick={() => {\n                        setEditVoice(true)\n                    }}\n                >\n                    <PencilFill className=\"edit\" />\n                </button>\n                <button \n                    className=\"sm-cir-button tertiary-btn\"\n                    onClick={() => {\n                        handlePhaseChange('review')\n                        handleFinish()\n                    }}\n                >\n                    <BoxArrowRight className=\"finish\" />\n                </button>\n            </div>\n        }\n    </div>\n  );\n}\n\nexport default PracticeCard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}