{"ast":null,"code":"var _jsxFileName = \"/Users/nickshryock/Documents/WebDevProjects/memorizer/client/src/Components/LegendInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './LegendInput.css';\nimport DropDown from \"./DropDown\";\nimport { getCategories } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LegendInput() {\n  _s();\n  const [queue, setQueue] = useState();\n  const [category, setCategory] = useState('Select from drop down');\n  const [categories, setCategories] = useState();\n  const [catId, setCatId] = useState();\n  const [isLoading, setIsLoading] = useState();\n  const [legend, setLegend] = useState(null);\n  useEffect(() => {\n    setIsLoading(true);\n    setCategoryOptions();\n  }, []);\n  useEffect(() => {\n    if (categories) {\n      for (let i = 0; i < categories.length; i++) {\n        if (categories[i].category === category) {\n          setCatId(categories[i].id);\n        }\n      }\n    }\n  }, [category]);\n  const setCategoryOptions = async () => {\n    const setData = catData => {\n      setCategories(catData);\n    };\n    const data = await getCategories();\n    setData(data);\n    setIsLoading(false);\n  };\n  const handleSubmit = () => {\n    console.log(category, catId, queue, legend);\n    if (!category || !catId || !queue || !legend) {\n      AbortController;\n      l;\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"def-text label\",\n          children: \"Library\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n          options: categories,\n          choice: category,\n          setChoice: setCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"def-text label\",\n          children: \"Queue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"queue\",\n          type: \"text\",\n          required: true,\n          onChange: e => setQueue(e.currentTarget.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"def-text label\",\n          children: \"Key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"legend\",\n          type: \"text\",\n          required: true,\n          onChange: e => setLegend(e.currentTarget.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"primary-button\",\n          onClick: handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(LegendInput, \"DcguXq6WE+jBFSXxs522s6fibBE=\");\n_c = LegendInput;\nexport default LegendInput;\nvar _c;\n$RefreshReg$(_c, \"LegendInput\");","map":{"version":3,"names":["React","useState","useEffect","DropDown","getCategories","jsxDEV","_jsxDEV","LegendInput","_s","queue","setQueue","category","setCategory","categories","setCategories","catId","setCatId","isLoading","setIsLoading","legend","setLegend","setCategoryOptions","i","length","id","setData","catData","data","handleSubmit","console","log","AbortController","l","children","fileName","_jsxFileName","lineNumber","columnNumber","className","options","choice","setChoice","type","required","onChange","e","currentTarget","value","onClick","_c","$RefreshReg$"],"sources":["/Users/nickshryock/Documents/WebDevProjects/memorizer/client/src/Components/LegendInput.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './LegendInput.css';\nimport DropDown from \"./DropDown\";\nimport { getCategories } from \"../utils/api\";\n\nfunction LegendInput () {\n\n    const [queue, setQueue] = useState();\n    const [category, setCategory] = useState('Select from drop down');\n    const [categories, setCategories] = useState();\n    const [catId, setCatId] = useState();\n    const [isLoading, setIsLoading] = useState();\n    const [legend, setLegend] = useState(null);\n\n    useEffect(() => {\n        setIsLoading(true)\n        setCategoryOptions()\n    }, [])\n\n    useEffect(() => {   \n        if(categories){\n            for(let i=0; i < categories.length; i++){\n                if(categories[i].category === category){\n                    setCatId(categories[i].id)\n                }\n            }\n        }\n    }, [category])\n\n    const setCategoryOptions = async () => {\n\n        const setData = (catData) => {\n            setCategories(catData);\n        }\n        const data = await getCategories();\n        setData(data);\n        setIsLoading(false)\n\n    }\n\n    const handleSubmit = () => {\n        console.log(category, catId, queue, legend)\n        if(!category || !catId || !queue || !legend){\n            AbortController;l\n        }\n    }\n\n    if(isLoading){\n        return(\n            <div>\n                <p>Loading...</p>\n            </div>\n        )\n    }else{\n        return(\n            <div className=\"form-container\">\n                <form>\n                    <label className=\"def-text label\">Library</label>\n                    <br/>\n                    <DropDown \n                        options={categories}\n                        choice={category}\n                        setChoice={setCategory}\n                    />\n                    <br/>\n                    <label className=\"def-text label\">Queue</label>\n                    <br/>\n                    <input\n                        id='queue'\n                        type='text'\n                        required\n                        onChange={(e) => setQueue(e.currentTarget.value)}\n                    />\n                    <br/>\n                    <label className=\"def-text label\">Key</label>\n                    <br/>\n                    <textarea\n                        id='legend'\n                        type='text'\n                        required\n                        onChange={(e) => setLegend(e.currentTarget.value)}\n                    />\n                    <button\n                        type=\"submit\"\n                        className=\"primary-button\"\n                        onClick={handleSubmit}\n                    >Submit</button>\n                </form>\n            </div>\n        )\n    }\n\n}\n\nexport default LegendInput;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}