{"ast":null,"code":"var _jsxFileName = \"/Users/nickshryock/Documents/WebDevProjects/memorizer/client/src/Components/Library.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport DropDown from \"./DropDown\";\nimport { getCategories, getLegends } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Library() {\n  _s();\n  const [categories, setCategories] = useState();\n  const [category, setCategory] = useState('Select from drop down');\n  const [catId, setCatId] = useState();\n  const [isLoading, setIsLoading] = useState();\n  const [legends, setLegends] = useState();\n  const [open, setOpen] = useState;\n  const setCategoryOptions = async () => {\n    const setData = catData => {\n      setCategories(catData);\n    };\n    const data = await getCategories();\n    setData(data);\n    setIsLoading(false);\n  };\n  const getLegendCards = async () => {\n    const setCardArry = data => {\n      const cardData = data;\n      setLegends(cardData);\n    };\n    const cardArry = await getLegends(catId); //getQueues()\n    setCardArry(cardArry);\n    setIsLoading(false);\n  };\n  useEffect(() => {\n    setIsLoading(true);\n    setCategoryOptions();\n  }, []);\n  useEffect(() => {\n    if (categories) {\n      for (let i = 0; i < categories.length; i++) {\n        if (categories[i].category === category) {\n          setCatId(categories[i].id);\n        }\n      }\n    }\n  }, [category]);\n  useEffect(() => {\n    if (catId) {\n      getLegendCards();\n    }\n  }, [catId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DropDown, {\n      options: categories,\n      choice: category,\n      setChoice: setCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), legends && legends.map((legend, index) => {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"primary-button\",\n        children: legend.queue\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(Library, \"CKPb14xZdQBHWuQpQ0wCt9LmLLA=\");\n_c = Library;\nexport default Library;\nvar _c;\n$RefreshReg$(_c, \"Library\");","map":{"version":3,"names":["React","useState","useEffect","DropDown","getCategories","getLegends","jsxDEV","_jsxDEV","Library","_s","categories","setCategories","category","setCategory","catId","setCatId","isLoading","setIsLoading","legends","setLegends","open","setOpen","setCategoryOptions","setData","catData","data","getLegendCards","setCardArry","cardData","cardArry","i","length","id","children","options","choice","setChoice","fileName","_jsxFileName","lineNumber","columnNumber","map","legend","index","className","queue","_c","$RefreshReg$"],"sources":["/Users/nickshryock/Documents/WebDevProjects/memorizer/client/src/Components/Library.js"],"sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport DropDown from \"./DropDown\";\nimport { getCategories, getLegends } from \"../utils/api\";\n\nfunction Library () {\n\n    const [categories, setCategories] = useState();\n    const [category, setCategory] = useState('Select from drop down');\n    const [catId, setCatId] = useState();\n    const [isLoading, setIsLoading] = useState();\n    const [legends, setLegends] = useState();\n    const [open, setOpen] = useState\n\n    \n\n    const setCategoryOptions = async () => {\n\n        const setData = (catData) => {\n            setCategories(catData);\n        }\n        const data = await getCategories();\n        setData(data);\n        setIsLoading(false)\n\n    }\n\n    const getLegendCards = async () => {\n\n        const setCardArry = (data) => {\n            const cardData = data;\n            setLegends(cardData);\n        }\n\n        const cardArry = await getLegends(catId); //getQueues()\n        setCardArry(cardArry);\n        setIsLoading(false);\n    }\n\n    useEffect(() => {\n        setIsLoading(true)\n        setCategoryOptions()\n    }, [])\n\n    useEffect(() => {   \n        if(categories){\n            for(let i=0; i < categories.length; i++){\n                if(categories[i].category === category){\n                    setCatId(categories[i].id)\n                }\n            }\n        }\n    }, [category])\n\n    useEffect(() => {\n        if(catId){\n            getLegendCards();\n        }\n    },[catId])\n\n    return (\n        <div>\n            <DropDown \n                options={categories}\n                choice={category}\n                setChoice={setCategory}\n            />\n            {\n                legends &&\n                legends.map((legend, index) => {\n                    return(\n                        <button key={index} className=\"primary-button\">\n                            {legend.queue}\n                        </button>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport default Library;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACjD,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,aAAa,EAAEC,UAAU,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,SAASC,OAAOA,CAAA,EAAI;EAAAC,EAAA;EAEhB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,CAAC;EAC9C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,uBAAuB,CAAC;EACjE,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,CAAC;EACpC,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,CAAC;EAC5C,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,CAAC;EACxC,MAAM,CAACmB,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ;EAIhC,MAAMqB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IAEnC,MAAMC,OAAO,GAAIC,OAAO,IAAK;MACzBb,aAAa,CAACa,OAAO,CAAC;IAC1B,CAAC;IACD,MAAMC,IAAI,GAAG,MAAMrB,aAAa,CAAC,CAAC;IAClCmB,OAAO,CAACE,IAAI,CAAC;IACbR,YAAY,CAAC,KAAK,CAAC;EAEvB,CAAC;EAED,MAAMS,cAAc,GAAG,MAAAA,CAAA,KAAY;IAE/B,MAAMC,WAAW,GAAIF,IAAI,IAAK;MAC1B,MAAMG,QAAQ,GAAGH,IAAI;MACrBN,UAAU,CAACS,QAAQ,CAAC;IACxB,CAAC;IAED,MAAMC,QAAQ,GAAG,MAAMxB,UAAU,CAACS,KAAK,CAAC,CAAC,CAAC;IAC1Ca,WAAW,CAACE,QAAQ,CAAC;IACrBZ,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC;EAEDf,SAAS,CAAC,MAAM;IACZe,YAAY,CAAC,IAAI,CAAC;IAClBK,kBAAkB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAENpB,SAAS,CAAC,MAAM;IACZ,IAAGQ,UAAU,EAAC;MACV,KAAI,IAAIoB,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAGpB,UAAU,CAACqB,MAAM,EAAED,CAAC,EAAE,EAAC;QACpC,IAAGpB,UAAU,CAACoB,CAAC,CAAC,CAAClB,QAAQ,KAAKA,QAAQ,EAAC;UACnCG,QAAQ,CAACL,UAAU,CAACoB,CAAC,CAAC,CAACE,EAAE,CAAC;QAC9B;MACJ;IACJ;EACJ,CAAC,EAAE,CAACpB,QAAQ,CAAC,CAAC;EAEdV,SAAS,CAAC,MAAM;IACZ,IAAGY,KAAK,EAAC;MACLY,cAAc,CAAC,CAAC;IACpB;EACJ,CAAC,EAAC,CAACZ,KAAK,CAAC,CAAC;EAEV,oBACIP,OAAA;IAAA0B,QAAA,gBACI1B,OAAA,CAACJ,QAAQ;MACL+B,OAAO,EAAExB,UAAW;MACpByB,MAAM,EAAEvB,QAAS;MACjBwB,SAAS,EAAEvB;IAAY;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,EAEEtB,OAAO,IACPA,OAAO,CAACuB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAK;MAC3B,oBACIpC,OAAA;QAAoBqC,SAAS,EAAC,gBAAgB;QAAAX,QAAA,EACzCS,MAAM,CAACG;MAAK,GADJF,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CAAC;IAEjB,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEd;AAAC/B,EAAA,CA1EQD,OAAO;AAAAsC,EAAA,GAAPtC,OAAO;AA4EhB,eAAeA,OAAO;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}