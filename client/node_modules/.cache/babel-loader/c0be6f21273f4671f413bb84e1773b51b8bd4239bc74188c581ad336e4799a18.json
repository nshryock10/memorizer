{"ast":null,"code":"var _jsxFileName = \"/Users/nickshryock/Documents/WebDevProjects/memorizer/src/Components/Practice.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport PracticeCard from \"./PracticeCard\";\nimport ToggleBar from \"./ToggleBar\";\nimport './Practice.css';\nimport { getLegend } from \"../utils/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Practice() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [cardIndex, setCardIndex] = useState();\n  useEffect(() => {\n    setIsLoading(true);\n    getCards();\n    console.log(cards);\n  }, []);\n  useEffect(() => {\n    console.log(cards);\n  }, [cards]);\n  const getCards = async () => {\n    const setCardArry = data => {\n      const cardData = data;\n      setCards(cardData);\n      setCardIndex(0);\n    };\n    const cardArry = await getLegend();\n    setCardArry(cardArry);\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-input\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 24\n    }, this), cards && cardIndex && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ToggleBar, {\n        queue: cards[cardIndex].queue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PracticeCard, {\n        queue: cards[cardIndex].legend\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Practice, \"+Eu8ajr8KrENZKBvT+ARaLCBirA=\");\n_c = Practice;\nexport default Practice;\nvar _c;\n$RefreshReg$(_c, \"Practice\");","map":{"version":3,"names":["React","useState","useEffect","PracticeCard","ToggleBar","getLegend","jsxDEV","_jsxDEV","Practice","_s","cards","setCards","isLoading","setIsLoading","cardIndex","setCardIndex","getCards","console","log","setCardArry","data","cardData","cardArry","children","className","fileName","_jsxFileName","lineNumber","columnNumber","queue","legend","_c","$RefreshReg$"],"sources":["/Users/nickshryock/Documents/WebDevProjects/memorizer/src/Components/Practice.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PracticeCard from \"./PracticeCard\";\nimport ToggleBar from \"./ToggleBar\";\nimport './Practice.css';\nimport { getLegend } from \"../utils/utils\";\n\nfunction Practice() {\n\n    const [cards, setCards] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [cardIndex, setCardIndex] = useState();\n\n    useEffect(() => {\n        setIsLoading(true)\n        getCards();\n        console.log(cards)\n    },[])\n\n    useEffect(() => {\n        console.log(cards)\n    }, [cards])\n\n    const getCards = async () => {\n\n        const setCardArry = (data) => {\n            const cardData = data;\n            setCards(cardData);\n            setCardIndex(0);\n        }\n\n        const cardArry = await getLegend();\n        setCardArry(cardArry);\n        setIsLoading(false);\n    }\n\n  return (\n    <div>\n        { isLoading && <p className='text-input'>Loading...</p> }\n        {cards && cardIndex &&\n            <div>\n                <ToggleBar queue={cards[cardIndex].queue} />\n                <PracticeCard queue={cards[cardIndex].legend}/>\n            </div>\n        }\n       \n    </div>\n  );\n}\n\nexport default Practice;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAO,gBAAgB;AACvB,SAASC,SAAS,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAEhB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZW,YAAY,CAAC,IAAI,CAAC;IAClBG,QAAQ,CAAC,CAAC;IACVC,OAAO,CAACC,GAAG,CAACR,KAAK,CAAC;EACtB,CAAC,EAAC,EAAE,CAAC;EAELR,SAAS,CAAC,MAAM;IACZe,OAAO,CAACC,GAAG,CAACR,KAAK,CAAC;EACtB,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMM,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAEzB,MAAMG,WAAW,GAAIC,IAAI,IAAK;MAC1B,MAAMC,QAAQ,GAAGD,IAAI;MACrBT,QAAQ,CAACU,QAAQ,CAAC;MAClBN,YAAY,CAAC,CAAC,CAAC;IACnB,CAAC;IAED,MAAMO,QAAQ,GAAG,MAAMjB,SAAS,CAAC,CAAC;IAClCc,WAAW,CAACG,QAAQ,CAAC;IACrBT,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC;EAEH,oBACEN,OAAA;IAAAgB,QAAA,GACMX,SAAS,iBAAIL,OAAA;MAAGiB,SAAS,EAAC,YAAY;MAAAD,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACtDlB,KAAK,IAAII,SAAS,iBACfP,OAAA;MAAAgB,QAAA,gBACIhB,OAAA,CAACH,SAAS;QAACyB,KAAK,EAAEnB,KAAK,CAACI,SAAS,CAAC,CAACe;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5CrB,OAAA,CAACJ,YAAY;QAAC0B,KAAK,EAAEnB,KAAK,CAACI,SAAS,CAAC,CAACgB;MAAO;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGT,CAAC;AAEV;AAACnB,EAAA,CAzCQD,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AA2CjB,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}