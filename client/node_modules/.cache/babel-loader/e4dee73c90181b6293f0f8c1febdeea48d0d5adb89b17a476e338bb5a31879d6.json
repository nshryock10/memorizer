{"ast":null,"code":"var _jsxFileName = \"/Users/nickshryock/Documents/WebDevProjects/memorizer/src/Components/Review.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { getAnswer, getLegend } from '../utils/utils';\nimport './Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Review() {\n  _s();\n  const [accuracy, setAccuracy] = useState('90%');\n  const [answer, setAnswer] = useState(null);\n  const [legend, setLegend] = useState(null);\n  const [markup, setMarkup] = useState([]);\n\n  // use effect \n  // async get request for the user answer and legend\n  // once data, run review algorithm\n  // map completed answer\n  useEffect(() => {\n    //replace with async get reuqest from API\n    setAnswer(getAnswer());\n    setLegend(getLegend());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Review, \"cWyoIq2feyDb26gLwPclPTUjtcQ=\");\n_c = Review;\nexport default Review;\nvar _c;\n$RefreshReg$(_c, \"Review\");","map":{"version":3,"names":["React","useEffect","useState","Link","getAnswer","getLegend","jsxDEV","_jsxDEV","Review","_s","accuracy","setAccuracy","answer","setAnswer","legend","setLegend","markup","setMarkup","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nickshryock/Documents/WebDevProjects/memorizer/src/Components/Review.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { getAnswer, getLegend } from '../utils/utils';\nimport './Home.css';\n\nfunction Review() {\n\n    const [accuracy, setAccuracy] = useState('90%');\n    const [answer, setAnswer] = useState(null);\n    const [legend, setLegend] = useState(null);\n    const [markup, setMarkup] = useState([]);\n\n    // use effect \n    // async get request for the user answer and legend\n    // once data, run review algorithm\n    // map completed answer\n    useEffect(() => {\n        \n        //replace with async get reuqest from API\n        setAnswer(getAnswer());\n        setLegend(getLegend());\n\n    }, [])\n\n  return (\n    <div>\n\n    </div>\n    \n  );\n}\n\nexport default Review;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,SAAS,EAAEC,SAAS,QAAQ,gBAAgB;AACrD,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAEd,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA;EACA;EACA;EACAD,SAAS,CAAC,MAAM;IAEZ;IACAY,SAAS,CAACT,SAAS,CAAC,CAAC,CAAC;IACtBW,SAAS,CAACV,SAAS,CAAC,CAAC,CAAC;EAE1B,CAAC,EAAE,EAAE,CAAC;EAER,oBACEE,OAAA;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAGV;AAACZ,EAAA,CAzBQD,MAAM;AAAAc,EAAA,GAANd,MAAM;AA2Bf,eAAeA,MAAM;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}