{"ast":null,"code":"var _jsxFileName = \"/Users/nickshryock/Documents/WebDevProjects/memorizer/src/Components/Review.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { getAnswer, getLegend, scoreAnswer } from '../utils/utils';\nimport './Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Review() {\n  _s();\n  const [accuracy, setAccuracy] = useState('90%');\n  const [answer, setAnswer] = useState(null);\n  const [legend, setLegend] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // use effect \n  // async get request for the user answer and legend\n  // once data, run review algorithm\n  // map completed answer\n  useEffect(() => {\n    setIsLoading(true);\n    getResults();\n  }, []);\n  useEffect(() => {\n    console.log(legend);\n  }, [answer, legend]);\n  const getResults = async () => {\n    const setResults = (ans, leg) => {\n      setLegend(leg);\n      setAnswer(ans);\n    };\n    //replace with api request\n    const leg = getLegend();\n    console.log(leg);\n    const ans = getAnswer();\n    console.log(ans);\n    setResults(ans, leg);\n    setIsLoading(false);\n    console.log(legend);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [answer && legend && !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"review-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accuracy-val\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: accuracy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"review-text-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"review-text\",\n          children: legend && legend.map(word => {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              clsasName: word.correct,\n              children: word.word\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), !answer && !legend && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Review, \"MZO3j5YVVaWjH20e9+SvWQ/twnY=\");\n_c = Review;\nexport default Review;\nvar _c;\n$RefreshReg$(_c, \"Review\");","map":{"version":3,"names":["React","useEffect","useState","Link","getAnswer","getLegend","scoreAnswer","jsxDEV","_jsxDEV","Review","_s","accuracy","setAccuracy","answer","setAnswer","legend","setLegend","isLoading","setIsLoading","getResults","console","log","setResults","ans","leg","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","word","clsasName","correct","_c","$RefreshReg$"],"sources":["/Users/nickshryock/Documents/WebDevProjects/memorizer/src/Components/Review.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { getAnswer, getLegend, scoreAnswer } from '../utils/utils';\nimport './Home.css';\n\nfunction Review() {\n\n    const [accuracy, setAccuracy] = useState('90%');\n    const [answer, setAnswer] = useState(null);\n    const [legend, setLegend] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n\n    // use effect \n    // async get request for the user answer and legend\n    // once data, run review algorithm\n    // map completed answer\n    useEffect(() => {\n      \n        setIsLoading(true);\n        getResults();\n\n    }, [])\n\n    useEffect(() => {\n        console.log(legend)\n        \n    }, [answer, legend]) \n\n    const getResults = async () => {\n\n        const setResults = (ans, leg) => {\n            setLegend(leg);\n            setAnswer(ans);\n        }\n        //replace with api request\n        const leg =  getLegend();\n        console.log(leg)\n        const ans =  getAnswer();\n        console.log(ans)\n        setResults(ans, leg);\n        setIsLoading(false);\n        console.log(legend);\n    }\n\n  return (\n    <div>\n        {   answer &&\n            legend &&\n            !isLoading &&\n        <div className=\"review-container\">\n            <div className=\"accuracy-val\">\n                <p>{accuracy}</p>\n            </div>\n            <div className=\"review-text-container\">\n                <div className=\"review-text\"> \n                    {legend && legend.map( word => {\n                        return(\n                            <p clsasName={word.correct}>{word.word}</p>\n                        )\n                    })}\n                </div>\n            </div>\n        </div>\n        }\n        {\n            !answer &&\n            !legend &&\n\n            <div>\n                <p>Loading...</p>\n            </div>\n        }\n    </div>\n    \n  );\n}\n\nexport default Review;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}