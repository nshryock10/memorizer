{"ast":null,"code":"var _jsxFileName = \"/Users/nickshryock/Documents/WebDevProjects/memorizer/src/Components/Review.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { getAnswer, getLegend, scoreAnswer } from '../utils/utils';\nimport './Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Review() {\n  _s();\n  const [accuracy, setAccuracy] = useState('90%');\n  const [answer, setAnswer] = useState(null);\n  const [legend, setLegend] = useState(null);\n  const [markup, setMarkup] = useState([]);\n\n  // use effect \n  // async get request for the user answer and legend\n  // once data, run review algorithm\n  // map completed answer\n  useEffect(() => {\n    //replace with async get reuqest from API\n    setAnswer(getAnswer());\n    setLegend(getLegend());\n    if (answer && legend) {\n      scoreAnswer(answer, legend);\n    }\n  }, []);\n  useEffect(() => {\n    if (answer && legend) {\n      scoreAnswer(answer, legend);\n    }\n  }, [answer, legend]);\n  const getResults = async();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [answer && legend && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"review-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accuracy-val\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: accuracy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"review-text-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"review-text\",\n          children: legend !== null && legend.map(word => {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              clsasName: word.correct,\n              children: word.word\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), !answer && !legend && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Review, \"Q15riCwd7MMWxVSIvy1+8Lp4/H4=\");\n_c = Review;\nexport default Review;\nvar _c;\n$RefreshReg$(_c, \"Review\");","map":{"version":3,"names":["React","useEffect","useState","Link","getAnswer","getLegend","scoreAnswer","jsxDEV","_jsxDEV","Review","_s","accuracy","setAccuracy","answer","setAnswer","legend","setLegend","markup","setMarkup","getResults","async","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","word","clsasName","correct","_c","$RefreshReg$"],"sources":["/Users/nickshryock/Documents/WebDevProjects/memorizer/src/Components/Review.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { getAnswer, getLegend, scoreAnswer } from '../utils/utils';\nimport './Home.css';\n\nfunction Review() {\n\n    const [accuracy, setAccuracy] = useState('90%');\n    const [answer, setAnswer] = useState(null);\n    const [legend, setLegend] = useState(null);\n    const [markup, setMarkup] = useState([]);\n\n    // use effect \n    // async get request for the user answer and legend\n    // once data, run review algorithm\n    // map completed answer\n    useEffect(() => {\n        \n        //replace with async get reuqest from API\n        setAnswer(getAnswer());\n        setLegend(getLegend());\n\n        if(answer && legend){\n            scoreAnswer(answer, legend)\n        }\n\n        \n\n    }, [])\n\n    useEffect(() => {\n        \n        if(answer && legend){\n            scoreAnswer(answer, legend)\n        }\n\n    }, [answer, legend])\n\n    const getResults = async ()\n\n  return (\n    <div>\n        {   answer &&\n            legend &&\n        <div className=\"review-container\">\n            <div className=\"accuracy-val\">\n                <p>{accuracy}</p>\n            </div>\n            <div className=\"review-text-container\">\n                <div className=\"review-text\"> \n                    {legend !== null && legend.map( word => {\n                        return(\n                            <p clsasName={word.correct}>{word.word}</p>\n                        )\n                    })}\n                </div>\n            </div>\n        </div>\n        }\n        {\n            !answer &&\n            !legend &&\n\n            <div>\n                <p>Loading...</p>\n            </div>\n        }\n    </div>\n    \n  );\n}\n\nexport default Review;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,SAAS,EAAEC,SAAS,EAAEC,WAAW,QAAQ,gBAAgB;AAClE,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAEd,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA;EACA;EACA;EACAD,SAAS,CAAC,MAAM;IAEZ;IACAa,SAAS,CAACV,SAAS,CAAC,CAAC,CAAC;IACtBY,SAAS,CAACX,SAAS,CAAC,CAAC,CAAC;IAEtB,IAAGQ,MAAM,IAAIE,MAAM,EAAC;MAChBT,WAAW,CAACO,MAAM,EAAEE,MAAM,CAAC;IAC/B;EAIJ,CAAC,EAAE,EAAE,CAAC;EAENd,SAAS,CAAC,MAAM;IAEZ,IAAGY,MAAM,IAAIE,MAAM,EAAC;MAChBT,WAAW,CAACO,MAAM,EAAEE,MAAM,CAAC;IAC/B;EAEJ,CAAC,EAAE,CAACF,MAAM,EAAEE,MAAM,CAAC,CAAC;EAEpB,MAAMI,UAAU,GAAGC,KAAK,CAAE,CAAC;EAE7B,oBACEZ,OAAA;IAAAa,QAAA,GACQR,MAAM,IACNE,MAAM,iBACVP,OAAA;MAAKc,SAAS,EAAC,kBAAkB;MAAAD,QAAA,gBAC7Bb,OAAA;QAAKc,SAAS,EAAC,cAAc;QAAAD,QAAA,eACzBb,OAAA;UAAAa,QAAA,EAAIV;QAAQ;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC,eACNlB,OAAA;QAAKc,SAAS,EAAC,uBAAuB;QAAAD,QAAA,eAClCb,OAAA;UAAKc,SAAS,EAAC,aAAa;UAAAD,QAAA,EACvBN,MAAM,KAAK,IAAI,IAAIA,MAAM,CAACY,GAAG,CAAEC,IAAI,IAAI;YACpC,oBACIpB,OAAA;cAAGqB,SAAS,EAAED,IAAI,CAACE,OAAQ;cAAAT,QAAA,EAAEO,IAAI,CAACA;YAAI;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAEnD,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EAGF,CAACb,MAAM,IACP,CAACE,MAAM,iBAEPP,OAAA;MAAAa,QAAA,eACIb,OAAA;QAAAa,QAAA,EAAG;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAET,CAAC;AAGV;AAAChB,EAAA,CAjEQD,MAAM;AAAAsB,EAAA,GAANtB,MAAM;AAmEf,eAAeA,MAAM;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}