{"ast":null,"code":"var _jsxFileName = \"/Users/nickshryock/Documents/WebDevProjects/memorizer/client/src/Components/Review.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { scoreAnswer } from '../utils/utils';\nimport { ChevronDown, ChevronUp } from 'react-bootstrap-icons';\nimport classNames from \"classnames\";\nimport './Review.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Review(props) {\n  _s();\n  //const [accuracy, setAccuracy] = useState(0);\n  const [colorLegend, setColorLegend] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  const [legend, setLegend] = useState(props.legend);\n  const [showAnswer, setShowAnswer] = useState(false);\n  const [answer, setAnswer] = useState(props.answer);\n  const [colorAnswer, setColorAnswer] = useState();\n  const handlePhaseChange = props.handlePhaseChange;\n  const accuracy = props.accuracy;\n  const setAccuracy = props.setAccuracy;\n\n  // use effect \n  // async get request for the user answer and legend\n  // once data, run review algorithm\n  // map completed answer\n  useEffect(() => {\n    setIsLoading(true);\n    getResults();\n  }, []);\n  const handleTryAgain = () => {\n    //trigger server request to remove answer from server\n    alert('Are you sure you want to try again?');\n  };\n  const getResults = async () => {\n    const setResults = (ans, leg) => {\n      const results = scoreAnswer(ans, leg);\n      setColorAnswer(results[0]);\n      setColorLegend(results[1]);\n      console.l;\n      setAccuracy(results[2]);\n    };\n    //replace with api request\n    const leg = legend;\n    const ans = answer;\n    setResults(ans, leg);\n    setIsLoading(false);\n  };\n  const handleShowClick = () => {\n    const current = !showAnswer;\n    setShowAnswer(current);\n  };\n  const displayAnswer = classNames('show-answer', {\n    open: showAnswer\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [answer && colorLegend && !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"review-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accuracy-val\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `${accuracy}%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"review-text-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"review-text\",\n          children: legend !== null && colorLegend.map((word, index) => {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              className: word.className ? word.className : 'null',\n              children: word.word\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: handleShowClick,\n        className: \"show\",\n        children: [\"Show Answer \", showAnswer ? /*#__PURE__*/_jsxDEV(ChevronDown, {\n          className: \"sm-chev down-chev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 14\n        }, this) : /*#__PURE__*/_jsxDEV(ChevronDown, {\n          className: \"sm-chev up-chev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), colorAnswer && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${displayAnswer} answer-container`,\n        children: answer !== null && colorAnswer.map((word, index) => {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `${word.className ? word.className : 'null'} ${displayAnswer}`,\n            children: word.word\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 37\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vrt-btn-container height\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"primary-button\",\n          onClick: () => handlePhaseChange('input'),\n          children: \"Try Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"primary-button\",\n          onClick: props.handleRightClick,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), props.id === props.length && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"primary-button\",\n          onClick: props.handleRightClick,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: \"link\",\n            to: \"/\",\n            children: \" Finish \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), !answer && !legend && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(Review, \"rE4EeH4X4wZrntxebAoQVM0jeR0=\");\n_c = Review;\nexport default Review;\nvar _c;\n$RefreshReg$(_c, \"Review\");","map":{"version":3,"names":["React","useEffect","useState","Link","scoreAnswer","ChevronDown","ChevronUp","classNames","jsxDEV","_jsxDEV","Review","props","_s","colorLegend","setColorLegend","isLoading","setIsLoading","legend","setLegend","showAnswer","setShowAnswer","answer","setAnswer","colorAnswer","setColorAnswer","handlePhaseChange","accuracy","setAccuracy","getResults","handleTryAgain","alert","setResults","ans","leg","results","console","l","handleShowClick","current","displayAnswer","open","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","word","index","onClick","handleRightClick","id","length","to","_c","$RefreshReg$"],"sources":["/Users/nickshryock/Documents/WebDevProjects/memorizer/client/src/Components/Review.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { scoreAnswer } from '../utils/utils';\nimport { ChevronDown, ChevronUp } from 'react-bootstrap-icons';\nimport classNames from \"classnames\";\nimport './Review.css';\n\nfunction Review(props) {\n\n    //const [accuracy, setAccuracy] = useState(0);\n    const [colorLegend, setColorLegend] = useState();\n    const [isLoading, setIsLoading] = useState(true);\n    const [legend, setLegend] = useState(props.legend);\n    const [showAnswer, setShowAnswer] = useState(false);\n    const [answer, setAnswer] = useState(props.answer);\n    const [colorAnswer, setColorAnswer] = useState();\n\n    const handlePhaseChange = props.handlePhaseChange;\n    const accuracy = props.accuracy;\n    const setAccuracy = props.setAccuracy;\n\n    // use effect \n    // async get request for the user answer and legend\n    // once data, run review algorithm\n    // map completed answer\n    useEffect(() => {\n        setIsLoading(true);\n        getResults();\n    }, [])\n\n    const handleTryAgain = () => {\n        //trigger server request to remove answer from server\n        alert('Are you sure you want to try again?')\n    }\n\n    const getResults = async () => {\n\n        const setResults = (ans, leg) => {\n\n            const results = scoreAnswer(ans, leg)\n            setColorAnswer(results[0]);\n            setColorLegend(results[1]);\n            console.l\n            setAccuracy(results[2]);\n        }\n        //replace with api request\n        const leg =  legend;\n        const ans =  answer;\n\n        setResults(ans, leg);\n        setIsLoading(false);\n    }\n\n    const handleShowClick = () => {\n        const current = !showAnswer;\n        setShowAnswer(current)\n    }\n\n    const displayAnswer = classNames('show-answer', {\n        open: showAnswer\n    })\n\n  return (\n    <div>\n        {   answer &&\n            colorLegend &&\n            !isLoading &&\n        <div className=\"review-container\">\n            <div className=\"accuracy-val\">\n                <p>{`${accuracy}%`}</p>\n            </div>\n            <div className=\"review-text-container\">\n                <div className=\"review-text\"> \n                    {legend !== null && colorLegend.map( (word, index) => {\n                        return(\n                            <span key={index} className={word.className ? word.className : 'null'}>{word.word}</span>\n                        )\n                    })}\n                </div>\n            </div>\n            <span onClick={handleShowClick} className=\"show\">Show Answer {showAnswer ?\n             <ChevronDown className=\"sm-chev down-chev\"/> :\n             <ChevronDown className=\"sm-chev up-chev\"/>}</span>\n            {colorAnswer &&\n                <div className={`${displayAnswer} answer-container`}>\n                        {answer !== null  && colorAnswer.map( (word, index) => {\n                            return(\n                                    <span key={index} className={`${word.className ? word.className : 'null'} ${displayAnswer}`}>{word.word}</span>\n                            )\n                        })}\n                </div>\n            }\n            <div className=\"vrt-btn-container height\">\n                <button className=\"primary-button\" onClick={() => handlePhaseChange('input')}>\n                    Try Again\n                </button>\n                <button className=\"primary-button\" onClick={props.handleRightClick}>\n                    Next\n                </button>\n                {\n                    props.id === props.length &&\n                    <button className=\"primary-button\" onClick={props.handleRightClick}>\n                    <Link className=\"link\" to='/'> Finish </Link>\n                </button>\n                }\n            </div>\n        </div>\n        }\n        {\n            !answer &&\n            !legend &&\n\n            <div>\n                <p>Loading...</p>\n            </div>\n        }\n    </div>\n    \n  );\n}\n\nexport default Review;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}